{"version":3,"sources":["utils/clustering.ts","components/uses/useScatterData.tsx","components/atoms/Selector.tsx","components/molecules/SelectorPanel.tsx","components/atoms/Slider.tsx","components/molecules/SliderPanel.tsx","components/uses/useHighlight.tsx","components/organisms/Scatter.tsx","components/uses/useDetailsData.tsx","components/uses/getDomains.tsx","components/organisms/Details.tsx","components/uses/useParallelData.tsx","components/uses/useColor.tsx","components/organisms/Parallel.tsx","components/organisms/Header.tsx","components/templates/Index.tsx","pages/Index.tsx","resolvers.ts","App.tsx","data/initialState.js","serviceWorker.ts","index.tsx"],"names":["clustering","data","client","k","Number","x","y","writeData","colors","Array","length","fill","array1","map","item","array2","centers","index","center","Math","floor","random","max","min","push","chosendata","ans","kmeans","initialization","clusters","getColor","str","hue","toString","charCodeAt","processedData","color","rgbToHex","hslToRgb","opacity","useScatterData","props","useApolloClient","useState","undefined","scatterData","setScatterData","useEffect","array","reduce","prev","curr","id","name","Name","size","options","value","label","UPDATE_PARALLEL","gql","Selector","useMutation","updateParallel","onChange","option","domain","target","variables","position","placeholder","SelectorPanel","Grid","container","xs","sm","md","lg","xl","alignItems","Typography","variant","useStyles","makeStyles","bar","width","zIndex","Slider","classes","_event","scatter","__typename","className","defaultValue","initial","valueLabelDisplay","SliderPanel","query","useHighlight","useQuery","details","Scatter","ref","useRef","height","containerSize","setContainerSize","highlight","tickValues","from","Set","tooltip","setTooltip","windowSize","useWindowSize","current","getBoundingClientRect","alignContent","xType","yType","margin","left","title","onValueClick","node","event","strokeWidth","colorType","onValueMouseOver","onValueMouseOut","justify","align","usePokemon","pokemon","setPokemon","find","getDomains","targets","sort","a","b","Details","domains","params","subset","Object","entries","filter","includes","imgSrc","src","slice","key","direction","top","right","bottom","useParallelData","parallelData","setParallelData","setDomains","newDomains","minMax","indexOf","useColor","selectorPanel","parallel","Parallel","_i","isNumeric","axisStart","axisEnd","axisDomain","tickValue","v","round","numberOfTicks","style","fontSize","Header","AppBar","backgroundColor","main","minHeight","visBox","boxShadow","padding","Index","Mutation","_root","cache","getCacheKey","fragment","readFragment","InMemoryCache","ApolloClient","typeDefs","resolvers","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kQA6DeA,EAxDI,SACjBC,EACAC,EACAC,GAEA,IAAKC,OAAOH,EAAK,GAAGI,KAAOD,OAAOH,EAAK,GAAGK,GAMxC,OALAJ,EAAOK,UAAU,CACfN,KAAM,CACJO,OAAQC,MAAMR,EAAKS,QAAQC,KAAK,cAG7BV,EAOT,IALA,IAAMW,EAASX,EAAKY,KAAI,SAAAC,GAAI,OAAIA,EAAKT,KAC/BU,EAASd,EAAKY,KAAI,SAAAC,GAAI,OAAIA,EAAKR,KAE/BU,EAAU,GAEPC,EAAQ,EAAGA,EAAQd,EAAGc,IAAS,CACtC,IAMMC,EAAS,CANLC,KAAKC,MACbD,KAAKE,SAAWF,KAAKG,IAAL,MAAAH,KAAI,YAAQP,IAAUO,KAAKI,IAAL,MAAAJ,KAAI,YAAQP,KAE1CO,KAAKC,MACbD,KAAKE,SAAWF,KAAKG,IAAL,MAAAH,KAAI,YAAQJ,IAAUI,KAAKI,IAAL,MAAAJ,KAAI,YAAQJ,MAGpDC,EAAQQ,KAAKN,GAIf,IADA,IAAMO,EAAa,GACVR,EAAQ,EAAGA,EAAQL,EAAOF,OAAQO,IACzCQ,EAAWD,KAAK,CAACZ,EAAOK,GAAQF,EAAOE,KAGzC,IAAMS,EAAMC,YAAOF,EAAYtB,EAAG,CAAEyB,eAAgBZ,IAAWa,SAEzDC,EAAW,SAACC,GAChB,IAAMC,EAAsC,MAA/BD,EAAIE,WAAWC,WAAW,GAAc,IACrD,MAAM,OAAN,OAAcF,EAAd,gBAGIG,EAAgBlC,EAAKY,KAAI,SAACC,EAAMG,GAAP,sBAC1BH,EAD0B,CAE7BsB,MAAOC,YAASC,YAASR,EAASJ,EAAIT,MACtCsB,QAAS,SASX,OANArC,EAAOK,UAAU,CACfN,KAAM,CACJO,OAAQ2B,EAActB,KAAI,SAAAC,GAAI,OAAIA,EAAKsB,YAIpCD,G,QCjBMK,EAhCQ,SAACC,GACtB,IAAMvC,EAASwC,cADwB,EAEDC,wBACpCC,GAHqC,mBAEhCC,EAFgC,KAEnBC,EAFmB,KA6BvC,OAvBAC,qBAAU,WACR,GAAgB,OAAZN,EAAMpC,GAA0B,OAAZoC,EAAMnC,EAAY,CACxC,IAAM0C,EAAQ/C,EAAKgD,QAAO,SAACC,EAAMC,GAC/B,IAAM9C,EAAI8C,EAAKV,EAAMpC,GACfC,EAAI6C,EAAKV,EAAMnC,GACrB,OAAU,OAAND,GAAoB,OAANC,EAAmB4C,EAC/B,GAAN,mBACKA,GADL,CAEE,CACEE,GAAID,EAAK/C,OACTiD,KAAMF,EAAKG,KACXjD,GAAS,IAANA,IAAqB,IAANA,EAAaA,EAAE4B,WAAa5B,EAC9CC,GAAS,IAANA,IAAqB,IAANA,EAAaA,EAAE2B,WAAa3B,EAC9CiD,KAAM,OAGT,IACHT,EAAe9C,EAAWgD,EAAO9C,EAAQuC,EAAMtC,OAIhD,CAACsC,EAAMtC,EAAGsC,EAAMpC,EAAGoC,EAAMnC,IAErBuC,G,iPC1BT,IAAMW,EAAU,CACd,SACA,OACA,SACA,SACA,QACA,KACA,SACA,UACA,SACA,SACA,QACA,aACA,cACA,QACA,YACA,UACA,cACA,cACA,mBACA,WACA,YACA,aACA,cACA3C,KAAI,SAAAC,GAAI,MAAK,CAAE2C,MAAO3C,EAAM4C,MAAO5C,MAE/B6C,EAAkBC,YAAH,KAuCNC,EAjCmB,SAACpB,GACjC,IAAMvC,EAASwC,cADmC,EAEzBoB,YAAYH,GAA9BI,EAF2C,oBA0BlD,OACE,oCACE,kBAAC,IAAD,CAAQP,QAASA,EAASQ,SAxBf,SAACC,GAAiB,IAAD,EAC9B,OAAQxB,EAAMyB,QACZ,IAAK,UACHhE,EAAOK,UAAU,CACfN,KAAK,eACFwC,EAAMyB,QADL,mBAECzB,EAAM0B,OAASF,EAAOR,OAFvB,2BAGYhB,EAAMyB,QAHlB,MAON,MACF,IAAK,WACHH,EAAe,CACbK,UAAW,CAAED,OAAQF,EAAOR,MAAOY,SAAU5B,EAAM4B,cAUXC,YAAa7B,EAAMgB,UCzCtDc,EAxBwB,SAAC9B,GACtC,OACE,oCACE,kBAAC+B,EAAA,EAAD,CACEC,WAAS,EACT3D,MAAI,EACJ4D,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,WAAY,YAEZ,kBAACP,EAAA,EAAD,CAAM1D,MAAI,EAAC4D,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzC,kBAACE,EAAA,EAAD,CAAYC,QAAS,SAAUxC,EAAM0B,SAEvC,kBAACK,EAAA,EAAD,CAAM1D,MAAI,EAAC4D,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7C,kBAAC,EAAarC,O,SCjBlByC,EAAYC,YAAW,CAC3BC,IAAK,CACHC,MAAO,OACPhB,SAAU,WACViB,OAAQ,KA2BGC,EAvBiB,SAAC9C,GAC/B,IAAMvC,EAASwC,cAMT8C,EAAUN,IAEhB,OACE,oCACE,kBAAC,IAAD,CACElB,SAVe,SAACyB,EAAahC,GACjCvD,EAAOK,UAAU,CACfN,KAAM,CAAEyF,QAAS,CAAEvF,EAAGsD,EAAOkC,WAAY,eASvCC,UAAWJ,EAAQJ,IACnB9D,IAAK,EACLC,IAAK,EACLsE,aAAcpD,EAAMqD,QACpBC,kBAAmB,SCDZC,EAxBsB,SAACvD,GACpC,OACE,oCACE,kBAAC+B,EAAA,EAAD,CACEC,WAAS,EACT3D,MAAI,EACJ4D,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,WAAY,UAEZ,kBAACP,EAAA,EAAD,CAAM1D,MAAI,EAAC4D,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzC,kBAACE,EAAA,EAAD,CAAYC,QAAS,SAArB,MAEF,kBAACT,EAAA,EAAD,CAAM1D,MAAI,EAAC4D,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7C,kBAAC,EAAWrC,O,0HCrBtB,IAAMwD,EAAQrC,YAAH,KAcIsC,EANM,WAGnB,OAFiBC,YAASF,GAAlBhG,KAEImG,QAAQhD,IC4IPiD,EAzHkB,SAAC5D,GAAkB,IAAD,EAC3CvC,EAASwC,cAET4D,EAAMC,iBAAuB,MAHc,EAIP5D,mBAAS,CAAE0C,MAAO,EAAGmB,OAAQ,IAJtB,mBAI1CC,EAJ0C,KAI3BC,EAJ2B,KAK3CC,EAAYT,IACZrD,EAAW,UAAGL,EAAe,CACjCnC,EAAGoC,EAAMpC,EACTC,EAAGmC,EAAMnC,EACTH,EAAGsC,EAAMtC,WAHM,aAAG,EAIhBU,KAAI,SAAAC,GAAI,sBACPA,EADO,CAEVsB,MAAOtB,EAAKsC,KAAOuD,EAAY,UAAY7F,EAAKsB,MAChDG,QAASzB,EAAKsC,KAAOuD,EAAY,EAAI,SAGjCC,OACYhE,IAAhBC,EACI,CACExC,EAC8B,kBAArBwC,EAAY,GAAGxC,EAAtB,YACQI,MAAMoG,KAAK,IAAIC,IAAIjE,EAAYhC,KAAI,SAAAC,GAAI,OAAIA,EAAKT,aACpDuC,EACNtC,EAC8B,kBAArBuC,EAAY,GAAGvC,EAAtB,YACQG,MAAMoG,KAAK,IAAIC,IAAIjE,EAAYhC,KAAI,SAAAC,GAAI,OAAIA,EAAKR,aACpDsC,GAER,CAAEvC,OAAGuC,EAAWtC,OAAGsC,GA5BwB,EA8BnBD,wBAA8BC,GA9BX,mBA8B1CmE,EA9B0C,KA8BjCC,EA9BiC,KA4C3CC,EAAaC,cAenB,OAPAnE,qBAAU,WACR2D,EAAiB,CACfrB,MAAOiB,EAAIa,QAASC,wBAAwB/B,MAC5CmB,OAAQF,EAAIa,QAASC,wBAAwBZ,WAE9C,CAACS,IAGF,kBAACzC,EAAA,EAAD,CACEC,WAAS,EACT3D,MAAI,EACJwF,IAAKA,EACLV,UAAW,YACXyB,aAAc,UAEd,kBAAC7C,EAAA,EAAD,CAAMC,WAAS,EAAC3D,MAAI,EAAC4D,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,QAClClC,IAAhBC,EACC,kBAAC,IAAD,CACEwC,MAAOoB,EAAcpB,MAAQ,KAC7BmB,OAA+B,IAAvBC,EAAcD,OACtBc,WAAwB1E,IAAjBgE,EAAWvG,EAAkB,eAAYuC,EAChD2E,WAAwB3E,IAAjBgE,EAAWtG,EAAkB,eAAYsC,EAChD4E,OAAQ,CAAEC,UAAuB7E,IAAjBgE,EAAWtG,EAAkB,GAAK,KAElD,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAOoH,MAAOjF,EAAMpC,EAAGuG,WAAYA,EAAWvG,IAC9C,kBAAC,IAAD,CAAOqH,MAAOjF,EAAMnC,EAAGsG,WAAYA,EAAWtG,IAC9C,kBAAC,IAAD,CACEL,KAAM4C,EACN8E,aAlDS,SAACC,EAAWC,GAC/B3H,EAAOK,UAAU,CACfN,KAAM,CACJmG,QAAS,CACPsB,MAAO,UACPtE,GAAIwE,EAAKxE,GACTuC,WAAY,eA6CRmC,YAAa,IACbC,UAAU,UACVC,iBAvCQ,SAACJ,EAAWC,GAC9Bb,EAAW,CAAE3G,EAAGuH,EAAKvH,EAAGC,EAAGsH,EAAKtH,EAAG8C,GAAIwE,EAAKxE,GAAIC,KAAMuE,EAAKvE,QAuCjD4E,gBArCO,SAACL,EAAWC,GAC7Bb,OAAWpE,WAsCUA,IAAZmE,EAAwB,kBAAC,IAAD,CAAMtD,MAAOsD,IAAc,MAGtD,kBAAC/B,EAAA,EAAD,8BAIJ,kBAACR,EAAA,EAAD,CACEC,WAAS,EACT3D,MAAI,EACJ4D,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJoD,QAAQ,SACRnD,WAAW,UAEX,kBAAC,EAAD,CAAeb,OAAQ,UAAWC,OAAQ,IAAKV,MAAOhB,EAAMpC,IAC5D,kBAAC,EAAD,CAAe6D,OAAQ,UAAWC,OAAQ,IAAKV,MAAOhB,EAAMnC,IAC5D,kBAAC,EAAD,CAAawF,QAAS,SACJlD,IAAjBgE,EAAWvG,QAAoCuC,IAAjBgE,EAAWtG,EACxC,kBAACkE,EAAA,EAAD,CAAM1D,MAAI,EAAC2D,WAAS,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvD,kBAACE,EAAA,EAAD,CAAYC,QAAS,QAAS7C,MAAO,QAAS+F,MAAO,QAArD,qEAIA,QClIGC,EAZI,SAAC3F,GAAkB,IAAD,EACLE,wBAA8BC,GADzB,mBAC5ByF,EAD4B,KACnBC,EADmB,KASnC,OANAvF,qBAAU,gBACSH,IAAbH,EAAMW,IACRkF,EAAWrI,EAAKsI,MAAK,SAAAzH,GAAI,OAAIA,EAAKV,SAAWqC,EAAMW,SAEpD,CAACX,EAAMW,KAEHiF,GCmBMG,EA/BI,SAACC,GAClB,YAAgB7F,IAAZ6F,EACmCA,EAAQxF,QAAO,SAACC,EAAMC,GAEzD,GAAwC,kBAD9BlD,EAAK,GACFkD,GAAqC,CAChD,IAAMH,EAAQ/C,EAAKY,KAAI,SAAAC,GAAI,OAAIA,EAAKqC,MACpC,OAAO,eACFD,EADL,eAEGC,EAAO,CAAChC,KAAKI,IAAL,MAAAJ,KAAI,YAAQ6B,IAAQ7B,KAAKG,IAAL,MAAAH,KAAI,YAAQ6B,OAG3C,IAAMA,EAAQ/C,EAAKY,KAAI,SAAAC,GAAI,OACO,OAAhCA,EAAKqC,GACDrC,EAAKqC,GAAwBlB,WAC7B,MAEN,OAAO,eACFiB,EADL,eAEGC,EAFH,YAGO1C,MAAMoG,KAAK,IAAIC,IAAI9D,IAAQ0F,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,GAAK,EAAI,UAIhE,SAIH,GC8JWC,EAlLkB,SAACpG,GAChC,IAAM6D,EAAMC,iBAAuB,MADc,EAEP5D,mBAAS,CAAE0C,MAAO,EAAGmB,OAAQ,IAFtB,mBAE1CC,EAF0C,KAE3BC,EAF2B,KAG3CO,EAAaC,cACbmB,EAAUD,EAAW,CACzBhF,GAAIX,EAAMW,KAGNqF,EAAU,CAAC,KAAM,SAAU,UAAW,SAAU,SAAU,SAE1DK,EAAUN,EAAWC,GACrBM,EAASN,EAAQxF,QACrB,SAACC,EAAMC,GAAP,sBACKD,EADL,eAEGC,EAAOkF,EAAUA,EAAQlF,QAAgCP,MAE5D,IAGFG,qBAAU,gBACQH,IAAZyF,GACF3B,EAAiB,CACfrB,MAAOiB,EAAIa,QAASC,wBAAwB/B,MAC5CmB,OAAQF,EAAIa,QAASC,wBAAwBZ,WAGhD,CAAC6B,EAASpB,IAEb,IAAM+B,OACQpG,IAAZyF,EACIY,OAAOC,QAAQb,GAAUc,QAAO,SAAArI,GAAI,MAClC,CACE,SACA,OACA,SACA,SACA,aACA,WACA,aACAsI,SAAStI,EAAK,YAElB8B,EAEAyG,EAASL,EACX,4EACAA,EAAOT,MAAK,SAAAzH,GAAI,MAAgB,WAAZA,EAAK,MAAkB,GAC3C,YACA8B,EAEJ,OACE,kBAAC4B,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJwB,IAAKA,EACLV,UAAW,YACXyB,aAAc,qBAEDzE,IAAZyF,EACC,oCACE,kBAAC7D,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJoD,QAAS,SACTb,aAAc,gBAEd,yBAAKiC,IAAKD,EAAQ7C,OAAQC,EAAcD,OAAS,MAEnD,kBAAChC,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJoD,QAAS,SACTb,aAAc,gBAThB,OAWG2B,QAXH,IAWGA,OAXH,EAWGA,EAAQO,MAAM,EAAG,GAAG1I,KAAI,mCAAE2I,EAAF,KAAO/F,EAAP,YACvB,kBAACe,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJ2E,UAAW,UAEX,kBAACzE,EAAA,EAAD,CAAYC,QAAS,MAAOuE,GAC5B,kBAACxE,EAAA,EAAD,CAAYC,QAAS,MAArB,OAA4BxB,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAOxB,iBAIzC,kBAACuC,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJoD,QAAS,SACTb,aAAc,gBAThB,OAWG2B,QAXH,IAWGA,OAXH,EAWGA,EAAQO,MAAM,GAAG1I,KAAI,mCAAE2I,EAAF,KAAO/F,EAAP,YACpB,oCACE,kBAACe,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJuC,aAAc,UAEd,kBAACrC,EAAA,EAAD,CAAYC,QAAS,aAAcuE,IAErC,kBAAChF,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJuC,aAAc,UAEd,kBAACrC,EAAA,EAAD,CAAYC,QAAS,MAArB,OAA4BxB,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAOxB,kBAK3C,kBAACuC,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJoD,QAAS,SACTb,aAAc,gBAEd,kBAAC,IAAD,CACEG,OAAQ,CAAEkC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAInC,KAAM,IAChDxH,KAAM,CAAC8I,GACPvC,OAAQC,EAAcD,OAAS,GAC/BnB,MAAOoB,EAAcD,OAAS,GAC9BsC,QACEG,OAAOC,QAAQJ,GAAUjI,KAAI,yCAAmB,CAC9CwC,KAD2B,KAE3Ba,OAF2B,aASrC,kBAACc,EAAA,EAAD,CAAYC,QAAS,SAArB,wDClIO4E,EA1CS,SAACpH,GACvB,IAAMgG,EAAUhG,EAAMgG,QAAQ5H,KAAI,SAAAC,GAAI,OAAIA,EAAKuC,QADP,EAEAV,wBAEtCC,GAJsC,mBAEjCkH,EAFiC,KAEnBC,EAFmB,OAKVpH,wBAC5BC,GANsC,mBAKjCkG,EALiC,KAKxBkB,EALwB,KAuCxC,OA9BAjH,qBAAU,WACR,IAAMkH,EAAazB,EAAWC,QACR7F,IAAlBH,EAAMgG,cAAwC7F,IAAfqH,IACjCF,EACE9J,EAAKY,KAAI,SAAAC,GACP,OAAO2H,EAAQxF,QAAO,SAACC,EAAMC,GAC3B,IAAM+G,EAASD,EAAW9G,GACpBqG,EAAMrG,EACZ,MAAM,GAAN,mBACKD,GADL,CAEE,CACE7C,EAAG8C,EACH7C,EACuB,kBAAd4J,EAAO,IACRpJ,EAAK0I,GAAkBU,EAAO,KAC/BA,EAAO,GAAKA,EAAO,IACN,OAAdpJ,EAAK0I,GACLU,EAAOC,QAAQrJ,EAAK0I,GAAMvH,aACzBiI,EAAOxJ,OAAS,GACjBwJ,EAAOC,QAAQ,SAGxB,QAGPH,EAAWC,MAGZ,CAACxH,EAAMgG,UAEH,CAACqB,EAAchB,I,6FC3CxB,IAAM7C,EAAQrC,YAAH,KAYIwG,EANE,WAGf,OAFiBjE,YAASF,GAAlBhG,KAEIO,QCMR0E,EAAYC,YAAW,CAC3BkF,cAAe,CACb7D,OAAQ,+BAEV8D,SAAU,CACR9D,OAAQ,kCA6IG+D,EAzImB,SAAC9H,GACjC,IAAM+C,EAAUN,IADkC,EAElB2E,EAAgB,CAC9CpB,QAAShG,EAAMgG,UAHiC,mBAE3CqB,EAF2C,KAE7BhB,EAF6B,KAM5CxC,EAAMC,iBAAuB,MANe,EAOR5D,mBAAS,CAAE0C,MAAO,EAAGmB,OAAQ,IAPrB,mBAO3CC,EAP2C,KAO5BC,EAP4B,KAS5ClG,EAAS4J,IACTnD,EAAaC,cACbP,EAAYT,IASlB,OAPAnD,qBAAU,WACR2D,EAAiB,CACfrB,MAAOiB,EAAIa,QAASC,wBAAwB/B,MAC5CmB,OAAQF,EAAIa,QAASC,wBAAwBZ,WAE9C,CAACS,IAGF,kBAACzC,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJc,UAAW,YACXyB,aAAc,gBAEd,kBAAC7C,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJuC,aAAc,eACda,QAAS,SACTtC,UAAWJ,EAAQ6E,eAElB5J,MAAM,GACJE,KAAK,GACLE,KAAI,SAAC2J,EAAIvJ,GAAL,aACH,kBAACuD,EAAA,EAAD,CAAM1D,MAAI,EAAC2D,WAAS,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACnD,kBAAC,EAAD,CACEZ,OAAQ,WACRC,OAAM,eAAUlD,EAAQ,GACxBwC,MAAK,UAAEhB,EAAMgG,QAAQxH,UAAhB,aAAE,EAAsBoC,KAC7BgB,SAAUpD,QAIH,YAAdT,EAAO,GACN,kBAACgE,EAAA,EAAD,CAAM1D,MAAI,EAAC2D,WAAS,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvD,kBAACE,EAAA,EAAD,CAAYC,QAAS,QAAS7C,MAAO,QAAS+F,MAAO,QAArD,yFAKA,MAEN,kBAAC3D,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJwB,IAAKA,EACLV,UAAWJ,EAAQ8E,SACnBpC,QAAS,UAET,kBAAC,IAAD,CACE7C,MAA6B,GAAtBoB,EAAcpB,MACrBmB,OAAQC,EAAcD,OACtBc,MAAM,UACNE,OAAQ,CAAEkC,IAAK,GAAIjC,KAAM,EAAGmC,OAAQ,GAAID,MAAO,SAE7B/G,IAAjBkH,EACGA,EAAcjJ,KAAI,SAACC,EAAyBG,GAC1C,OACE,kBAAC,IAAD,CACEhB,KAAMa,EACNsB,MAAOuE,IAAc1F,EAAQ,EAAI,UAAYT,EAAOS,GACpDsB,QAASoE,IAAc1F,EAAQ,EAAI,EAAI,SAI7C,UACc2B,IAAjBkH,EACGA,EAAc,GAAGjJ,KACf,SAACC,EAA8BG,GAC7B,IAAMwJ,EAAYrK,OAAO0I,EAAShI,EAAKT,GAAG,IAC1C,MAAO,CACL,CACE,kBAAC,IAAD,CACEqK,UAAW,CAAErK,EAAGS,EAAKT,EAAGC,EAAG,GAC3BqK,QAAS,CAAEtK,EAAGS,EAAKT,EAAGC,EAAG,GACzBsK,WAAYH,EAAY3B,EAAShI,EAAKT,GAAK,CAAC,EAAG,GAC/CwK,UACEJ,OACI7H,EACA,SAACkI,GAAD,OACEhC,EAAShI,EAAKT,GACZc,KAAK4J,MAAMD,GAAKhC,EAAShI,EAAKT,GAAGK,OAAS,MAGpDsK,cACEP,OAAY7H,EAAYkG,EAAShI,EAAKT,GAAGK,OAAS,IAGtD,kBAAC,IAAD,CACET,KAAM,CACJ,CACEI,EAAGS,EAAKT,EACRC,GAAI,IACJoD,MAAO5C,EAAKT,EAAE4B,WACdgJ,MAAO,CAAEC,SAAU,aAQjC,S,SCnICC,EArBiB,SAAC1I,GAC/B,OACE,kBAAC2I,EAAA,EAAD,CACE/G,SAAS,SACT4G,MAAO,CAAEI,gBAAiB,UAAW7E,OAAQ,SAE7C,kBAAChC,EAAA,EAAD,CAAMC,WAAS,EAACyD,QAAS,gBAAiBnD,WAAY,UACpD,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKgG,MAAO,CAAEzD,OAAQ,cAA1C,4BAGA,kBAACxC,EAAA,EAAD,CAAYC,QAAQ,KAAKgG,MAAO,CAAEzD,OAAQ,WAA1C,cAGA,kBAACxC,EAAA,EAAD,CAAYC,QAAQ,QAAQgG,MAAO,CAAEzD,OAAQ,cAA7C,iDCLFtC,EAAYC,YAAW,CAC3BmG,KAAM,CACJC,UAAW,qBACXF,gBAAiB,WAEnB3F,QAAS,CACPc,OAAQ,wBAEVJ,QAAS,CACPI,OAAQ,wBAEV8D,SAAU,CACR9D,OAAQ,sBAEVgF,OAAQ,CACNC,UAAW,6BACX,eAAgB,CACdC,QAAS,WAqEAC,EAhEgB,SAAClJ,GAC9B,IAAM+C,EAAUN,IAEhB,OACE,oCACE,kBAACV,EAAA,EAAD,CAAM1D,MAAI,EAAC2D,WAAS,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvD,kBAAC,EAAD,OAEF,kBAACN,EAAA,EAAD,CACE1D,MAAI,EACJ2D,WAAS,EACTC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJc,UAAWJ,EAAQ8F,MAGnB,kBAAC9G,EAAA,EAAD,CAAMC,WAAS,EAAC3D,MAAI,EAAC4D,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACtD,kBAACN,EAAA,EAAD,CACEC,WAAS,EACT3D,MAAI,EACJ4D,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJc,UAAS,UAAKJ,EAAQE,QAAb,YAAwBF,EAAQgG,SAEzC,kBAAC,EAAY/I,EAAMiD,UAErB,kBAAClB,EAAA,EAAD,CACEC,WAAS,EACT3D,MAAI,EACJ4D,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJc,UAAS,UAAKJ,EAAQY,QAAb,YAAwBZ,EAAQgG,SAEzC,kBAAC,EAAD,CAASpI,GAAIX,EAAM2D,QAAQhD,OAK/B,kBAACoB,EAAA,EAAD,CACEC,WAAS,EACT3D,MAAI,EACJ4D,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJc,UAAS,UAAKJ,EAAQ8E,SAAb,YAAyB9E,EAAQgG,SAE1C,kBAAC,EAAa/I,EAAM6H,c,kSCtF9B,IAAMrE,EAAQrC,YAAH,KAgCI+H,EAXgB,SAAClJ,GAAkB,IACxCxC,EAASkG,YAASF,GAAlBhG,KACR,OACE,kBAAC,EAAD,CACEyF,QAASzF,EAAKyF,QACdU,QAASnG,EAAKmG,QACdkE,SAAUrK,EAAKqK,Y,+OChCN,QACbsB,SAAU,CACR7H,eAAgB,SACd8H,EACAzH,EAFc,GAIV,IADF0H,EACC,EADDA,MAEI1I,GAAK2I,EADR,EADMA,aAEc,CACrBpG,WAAY,WACZvC,GAAI,IAEA4I,EAAWpI,YAAH,MASR0G,EAAWwB,EAAMG,aAAa,CAAED,WAAU5I,OAC1CnD,EAAO,CACXyH,MAAO4C,EAAS5C,MAChBe,QAAS,sBACJ6B,EAAS7B,QAAQU,QAClB,SAACrI,GAAD,OAA6BA,EAAKuD,WAAaD,EAAUC,aAFpD,CAIP,CACEA,SAAUD,EAAUC,SACpBhB,KAAMe,EAAUD,OAChBwB,WAAY,YAEd+C,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtE,SAAWuE,EAAEvE,UAAY,EAAI,MAInD,OADAyH,EAAMvL,UAAU,CAAE6C,KAAInD,SACf,QC3BP6L,GAAQ,IAAII,KAEZhM,GAAS,IAAIiM,IAAa,CAC9BL,MAAOA,GACPM,SAAU,GACVC,UAAWA,KAGbP,GAAMvL,UAAU,CACdN,KCpBa,CACbyF,QAAS,CACPgC,MAAO,UACPrH,EAAG,SACHC,EAAG,UACHH,EAAG,EACHwF,WAAY,WAEd2E,SAAU,CACRlH,GAAI,EACJsE,MAAO,WACPe,QAAS,CACP,CAAEpE,SAAU,EAAGhB,KAAM,SAAUsC,WAAY,UAC3C,CAAEtB,SAAU,EAAGhB,KAAM,UAAWsC,WAAY,WAE9CA,WAAY,YAEdS,QAAS,CACPsB,MAAO,UACPtE,GAAI,KACJuC,WAAY,WAEdnF,OAAQ,MDCV,IAYe8L,GAZH,WACV,OACE,yBAAK1G,UAAU,OACb,kBAAC,KAAD,CAAgB1F,OAAQA,IACtB,kBAACsE,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAClD,kBAAC,EAAD,UEhBUyH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.12a742fe.chunk.js","sourcesContent":["import kmeans from 'ml-kmeans';\nimport { MarkSeriesPoint } from 'react-vis';\nimport { rgbToHex, hslToRgb } from '@material-ui/core';\nimport { ApolloClient } from 'apollo-boost';\n\nconst clustering = (\n  data: MarkSeriesPoint[],\n  client: ApolloClient<object>,\n  k: number\n) => {\n  if (!Number(data[0].x) || !Number(data[0].y)) {\n    client.writeData({\n      data: {\n        colors: Array(data.length).fill('#12939a')\n      }\n    });\n    return data;\n  }\n  const array1 = data.map(item => item.x) as number[]; //from data find all variable1 values\n  const array2 = data.map(item => item.y) as number[]; //from data find all variable2 values\n\n  const centers = [];\n\n  for (let index = 0; index < k; index++) {\n    const x = Math.floor(\n      Math.random() * Math.max(...array1) + Math.min(...array1)\n    );\n    const y = Math.floor(\n      Math.random() * Math.max(...array2) + Math.min(...array2)\n    );\n    const center = [x, y];\n    centers.push(center);\n  }\n\n  const chosendata = [];\n  for (let index = 0; index < array1.length; index++) {\n    chosendata.push([array1[index], array2[index]]);\n  }\n\n  const ans = kmeans(chosendata, k, { initialization: centers }).clusters;\n\n  const getColor = (str: string | number) => {\n    const hue = (str.toString().charCodeAt(0) * 157.5) % 360;\n    return `hsl(${hue}, 75%, 60%)`;\n  };\n\n  const processedData = data.map((item, index) => ({\n    ...item,\n    color: rgbToHex(hslToRgb(getColor(ans[index]))),\n    opacity: 0.25\n  }));\n\n  client.writeData({\n    data: {\n      colors: processedData.map(item => item.color)\n    }\n  });\n\n  return processedData;\n};\n\nexport default clustering;\n","import React, { useState, useEffect } from 'react';\nimport { Pokemon } from '../../consts/Pokemon';\nimport data from '../../data/data.json';\nimport { MarkSeriesPoint } from 'react-vis';\nimport clustering from '../../utils/clustering';\nimport { useApolloClient } from '@apollo/react-hooks';\n\ntype Props = { x?: string; y?: string; k: number };\n\nconst useScatterData = (props: Props) => {\n  const client = useApolloClient();\n  const [scatterData, setScatterData] = useState<MarkSeriesPoint[] | undefined>(\n    undefined\n  );\n\n  useEffect(() => {\n    if (props.x !== null && props.y !== null) {\n      const array = data.reduce((prev, curr) => {\n        const x = curr[props.x! as keyof Pokemon];\n        const y = curr[props.y! as keyof Pokemon];\n        if (x === null || y === null) return prev;\n        return [\n          ...prev,\n          {\n            id: curr.Number,\n            name: curr.Name,\n            x: x === false || x === true ? x.toString() : x,\n            y: y === false || y === true ? y.toString() : y,\n            size: 1\n          }\n        ];\n      }, [] as MarkSeriesPoint[]);\n      setScatterData(clustering(array, client, props.k));\n    }\n    return undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.k, props.x, props.y]);\n\n  return scatterData;\n};\n\nexport default useScatterData;\n","import React from 'react';\nimport Select from 'react-select';\nimport { useApolloClient, useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\nexport type Props = {\n  domain: string;\n  target: string;\n  value?: string;\n  position?: number;\n};\n\nconst options = [\n  'Number',\n  'Name',\n  'Type_1',\n  'Type_2',\n  'Total',\n  'HP',\n  'Attack',\n  'Defense',\n  'Sp_Atk',\n  'Sp_Def',\n  'Speed',\n  'Generation',\n  'isLegendary',\n  'Color',\n  'hasGender',\n  'Pr_Male',\n  'Egg_Group_1',\n  'Egg_Group_2',\n  'hasMegaEvolution',\n  'Height_m',\n  'Weight_kg',\n  'Catch_Rate',\n  'Body_Style'\n].map(item => ({ value: item, label: item }));\n\nconst UPDATE_PARALLEL = gql`\n  mutation UpdateParallel($target: String!, $position: Integer) {\n    updateParallel(target: $target, position: $position) @client\n  }\n`;\n\nconst Selector: React.FC<Props> = (props: Props) => {\n  const client = useApolloClient();\n  const [updateParallel] = useMutation(UPDATE_PARALLEL);\n\n  const update = (option: any) => {\n    switch (props.domain) {\n      case 'scatter':\n        client.writeData({\n          data: {\n            [props.domain]: {\n              [props.target]: option.value,\n              __typename: props.domain\n            }\n          }\n        });\n        break;\n      case 'parallel':\n        updateParallel({\n          variables: { target: option.value, position: props.position }\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <Select options={options} onChange={update} placeholder={props.value} />\n    </>\n  );\n};\n\nexport default Selector;\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport Selector from '../atoms/Selector';\nimport { Props as SelectorProps } from '../atoms/Selector';\n\ntype Props = SelectorProps;\n\nconst SelectorPanel: React.FC<Props> = (props: Props) => {\n  return (\n    <>\n      <Grid\n        container\n        item\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        alignItems={'baseline'}\n      >\n        <Grid item xs={2} sm={2} md={2} lg={2} xl={2}>\n          <Typography variant={'body1'}>{props.target}</Typography>\n        </Grid>\n        <Grid item xs={10} sm={10} md={10} lg={10} xl={10}>\n          <Selector {...props} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default SelectorPanel;\n","import React from 'react';\nimport Select from 'react-select';\nimport { useApolloClient, useMutation } from '@apollo/react-hooks';\nimport { Slider as MuiSlider, makeStyles } from '@material-ui/core';\n\nexport type Props = { initial: number };\n\nconst useStyles = makeStyles({\n  bar: {\n    width: '100%',\n    position: 'relative',\n    zIndex: 0\n  }\n});\n\nconst Slider: React.FC<Props> = (props: Props) => {\n  const client = useApolloClient();\n  const handleChange = (_event: any, value: any) => {\n    client.writeData({\n      data: { scatter: { k: value, __typename: 'scatter' } }\n    });\n  };\n  const classes = useStyles();\n\n  return (\n    <>\n      <MuiSlider\n        onChange={handleChange}\n        className={classes.bar}\n        max={8}\n        min={1}\n        defaultValue={props.initial}\n        valueLabelDisplay={'on'}\n      />\n    </>\n  );\n};\n\nexport default Slider;\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport Slider from '../atoms/Slider';\nimport { Props as SliderProps } from '../atoms/Slider';\n\ntype Props = SliderProps;\n\nconst SliderPanel: React.FC<Props> = (props: Props) => {\n  return (\n    <>\n      <Grid\n        container\n        item\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        alignItems={'center'}\n      >\n        <Grid item xs={2} sm={2} md={2} lg={2} xl={2}>\n          <Typography variant={'body1'}>k</Typography>\n        </Grid>\n        <Grid item xs={10} sm={10} md={10} lg={10} xl={10}>\n          <Slider {...props} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default SliderPanel;\n","import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst query = gql`\n  {\n    details {\n      id\n    }\n  }\n`;\n\nconst useHighlight = () => {\n  const { data } = useQuery(query);\n\n  return data.details.id;\n};\n\nexport default useHighlight;\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  XYPlot,\n  XAxis,\n  MarkSeries,\n  YAxis,\n  HorizontalGridLines,\n  VerticalGridLines,\n  MarkSeriesPoint,\n  Hint\n} from 'react-vis';\nimport useScatterData from '../uses/useScatterData';\nimport SelectorPanel from '../molecules/SelectorPanel';\nimport { Grid, Typography } from '@material-ui/core';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport SliderPanel from '../molecules/SliderPanel';\nimport { useWindowSize } from 'react-use';\nimport useHighlight from '../uses/useHighlight';\n\nexport type Props = {\n  title: string;\n  x?: string;\n  y?: string;\n  k: number;\n};\n\ntype ToolTip = {\n  id: number;\n  x: number;\n  y: number;\n  name: string;\n};\n\nconst Scatter: React.FC<Props> = (props: Props) => {\n  const client = useApolloClient();\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 });\n  const highlight = useHighlight();\n  const scatterData = useScatterData({\n    x: props.x,\n    y: props.y,\n    k: props.k\n  })?.map(item => ({\n    ...item,\n    color: item.id === highlight ? '#222222' : item.color,\n    opacity: item.id === highlight ? 1 : 0.25\n  }));\n\n  const tickValues =\n    scatterData !== undefined\n      ? {\n          x:\n            typeof scatterData[0].x !== 'number'\n              ? [...Array.from(new Set(scatterData.map(item => item.x)))]\n              : undefined,\n          y:\n            typeof scatterData[0].y !== 'number'\n              ? [...Array.from(new Set(scatterData.map(item => item.y)))]\n              : undefined\n        }\n      : { x: undefined, y: undefined };\n\n  const [tooltip, setTooltip] = useState<ToolTip | undefined>(undefined);\n\n  const onValueClick = (node: any, event: any) => {\n    client.writeData({\n      data: {\n        details: {\n          title: 'details',\n          id: node.id,\n          __typename: 'details'\n        }\n      }\n    });\n  };\n\n  const windowSize = useWindowSize();\n\n  const onMouseOver = (node: any, event: any) => {\n    setTooltip({ x: node.x, y: node.y, id: node.id, name: node.name });\n  };\n  const onMouseOut = (node: any, event: any) => {\n    setTooltip(undefined);\n  };\n  useEffect(() => {\n    setContainerSize({\n      width: ref.current!.getBoundingClientRect().width,\n      height: ref.current!.getBoundingClientRect().height\n    });\n  }, [windowSize]);\n\n  return (\n    <Grid\n      container\n      item\n      ref={ref}\n      className={'component'}\n      alignContent={'center'}\n    >\n      <Grid container item xs={8} sm={8} md={8} lg={8} xl={8}>\n        {scatterData !== undefined ? (\n          <XYPlot\n            width={containerSize.width / 1.55}\n            height={containerSize.height * 0.78}\n            xType={tickValues.x !== undefined ? 'ordinal' : undefined}\n            yType={tickValues.y !== undefined ? 'ordinal' : undefined}\n            margin={{ left: tickValues.y !== undefined ? 60 : 40 }}\n          >\n            <HorizontalGridLines />\n            <VerticalGridLines />\n            <XAxis title={props.x} tickValues={tickValues.x} />\n            <YAxis title={props.y} tickValues={tickValues.y} />\n            <MarkSeries\n              data={scatterData}\n              onValueClick={onValueClick}\n              strokeWidth={0.01}\n              colorType=\"literal\"\n              onValueMouseOver={onMouseOver}\n              onValueMouseOut={onMouseOut}\n            />\n            {tooltip !== undefined ? <Hint value={tooltip} /> : null}\n          </XYPlot>\n        ) : (\n          <Typography>'Please select axes'</Typography>\n        )}\n      </Grid>\n\n      <Grid\n        container\n        item\n        xs={4}\n        sm={4}\n        md={4}\n        lg={4}\n        xl={4}\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <SelectorPanel domain={'scatter'} target={'x'} value={props.x} />\n        <SelectorPanel domain={'scatter'} target={'y'} value={props.y} />\n        <SliderPanel initial={2} />\n        {tickValues.x !== undefined || tickValues.y !== undefined ? (\n          <Grid item container xs={10} sm={10} md={10} lg={10} xl={10}>\n            <Typography variant={'body1'} color={'error'} align={'left'}>\n              Clustering is not enabled as one or more variables are discrete.\n            </Typography>\n          </Grid>\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Scatter;\n","import { useState, useEffect } from 'react';\nimport { Pokemon } from '../../consts/Pokemon';\nimport data from '../../data/data.json';\n\ntype Props = { id?: number };\n\nconst usePokemon = (props: Props) => {\n  const [pokemon, setPokemon] = useState<Pokemon | undefined>(undefined);\n\n  useEffect(() => {\n    if (props.id !== undefined) {\n      setPokemon(data.find(item => item.Number === props.id));\n    }\n  }, [props.id]);\n\n  return pokemon;\n};\n\nexport default usePokemon;\n","import { Pokemon } from '../../consts/Pokemon';\nimport data from '../../data/data.json';\n\nconst getDomains = (targets: string[]) => {\n  if (targets !== undefined) {\n    const domains: Record<string, any> = targets.reduce((prev, curr) => {\n      const t = data[0];\n      if (typeof t[curr as keyof Pokemon] === typeof 0) {\n        const array = data.map(item => item[curr as keyof Pokemon]) as number[];\n        return {\n          ...prev,\n          [curr]: [Math.min(...array), Math.max(...array)]\n        };\n      } else {\n        const array = data.map(item =>\n          item[curr as keyof Pokemon] !== null\n            ? item[curr as keyof Pokemon]!.toString()\n            : ''\n        );\n        return {\n          ...prev,\n          [curr]: [\n            ...Array.from(new Set(array)).sort((a, b) => (a < b ? -1 : 1))\n          ]\n        };\n      }\n    }, {});\n\n    return domains;\n  } else {\n    return undefined;\n  }\n};\n\nexport default getDomains;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Typography, Grid, Box } from '@material-ui/core';\nimport usePokemon from '../uses/useDetailsData';\nimport { useWindowSize } from 'react-use';\nimport useParallelData from '../uses/useParallelData';\nimport { RadarChart, RadarChartPoint } from 'react-vis';\nimport getDomains from '../uses/getDomains';\n\nexport type Props = { id: number };\n\nconst Details: React.FC<Props> = (props: Props) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 });\n  const windowSize = useWindowSize();\n  const pokemon = usePokemon({\n    id: props.id\n  });\n\n  const targets = ['HP', 'Attack', 'Defense', 'Sp_Atk', 'Sp_Def', 'Speed'];\n\n  const domains = getDomains(targets);\n  const params = targets.reduce(\n    (prev, curr) => ({\n      ...prev,\n      [curr]: pokemon ? pokemon[curr as keyof typeof pokemon] : undefined\n    }),\n    {}\n  );\n\n  useEffect(() => {\n    if (pokemon !== undefined) {\n      setContainerSize({\n        width: ref.current!.getBoundingClientRect().width,\n        height: ref.current!.getBoundingClientRect().height\n      });\n    }\n  }, [pokemon, windowSize]);\n\n  const subset =\n    pokemon !== undefined\n      ? Object.entries(pokemon!).filter(item =>\n          [\n            'Number',\n            'Name',\n            'Type_1',\n            'Type_2',\n            'Generation',\n            'Height_m',\n            'Weight_kg'\n          ].includes(item[0])\n        )\n      : undefined;\n\n  const imgSrc = subset\n    ? 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/' +\n      subset.find(item => item[0] === 'Number')![1] +\n      '.png'\n    : undefined;\n\n  return (\n    <Grid\n      item\n      container\n      xs={12}\n      sm={12}\n      md={12}\n      lg={12}\n      xl={12}\n      ref={ref}\n      className={'component'}\n      alignContent={'space-around'}\n    >\n      {pokemon !== undefined ? (\n        <>\n          <Grid\n            item\n            container\n            xs={3}\n            sm={3}\n            md={3}\n            lg={3}\n            xl={3}\n            justify={'center'}\n            alignContent={'space-around'}\n          >\n            <img src={imgSrc} height={containerSize.height - 32}></img>\n          </Grid>\n          <Grid\n            item\n            container\n            xs={3}\n            sm={3}\n            md={3}\n            lg={3}\n            xl={3}\n            justify={'center'}\n            alignContent={'space-around'}\n          >\n            {subset?.slice(0, 2).map(([key, value]) => (\n              <Grid\n                item\n                container\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n                xl={12}\n                direction={'column'}\n              >\n                <Typography variant={'h6'}>{key}</Typography>\n                <Typography variant={'h3'}>{value?.toString()}</Typography>\n              </Grid>\n            ))}\n          </Grid>\n          <Grid\n            item\n            container\n            xs={2}\n            sm={2}\n            md={2}\n            lg={2}\n            xl={2}\n            justify={'center'}\n            alignContent={'space-around'}\n          >\n            {subset?.slice(2).map(([key, value]) => (\n              <>\n                <Grid\n                  item\n                  container\n                  xs={6}\n                  sm={6}\n                  md={6}\n                  lg={6}\n                  xl={6}\n                  alignContent={'center'}\n                >\n                  <Typography variant={'subtitle2'}>{key}</Typography>\n                </Grid>\n                <Grid\n                  item\n                  container\n                  xs={6}\n                  sm={6}\n                  md={6}\n                  lg={6}\n                  xl={6}\n                  alignContent={'center'}\n                >\n                  <Typography variant={'h6'}>{value?.toString()}</Typography>\n                </Grid>\n              </>\n            ))}\n          </Grid>\n          <Grid\n            item\n            container\n            xs={4}\n            sm={4}\n            md={4}\n            lg={4}\n            xl={4}\n            justify={'center'}\n            alignContent={'space-around'}\n          >\n            <RadarChart\n              margin={{ top: 40, right: 30, bottom: 30, left: 40 }}\n              data={[params] as RadarChartPoint[]}\n              height={containerSize.height - 32}\n              width={containerSize.height - 32}\n              domains={\n                Object.entries(domains!).map(([key, value]) => ({\n                  name: key,\n                  domain: value\n                })) as any\n              }\n            />\n          </Grid>\n        </>\n      ) : (\n        <Typography variant={'body1'}>\n          Click any mark to show the details of the pokemon.\n        </Typography>\n      )}\n    </Grid>\n  );\n};\n\nexport default Details;\n","import { useState, useEffect } from 'react';\nimport { Pokemon } from '../../consts/Pokemon';\nimport data from '../../data/data.json';\nimport { LineSeriesPoint } from 'react-vis';\nimport getDomains from './getDomains';\n\ntype Props = { targets: { position: number; name: string }[] };\n\nconst useParallelData = (props: Props) => {\n  const targets = props.targets.map(item => item.name);\n  const [parallelData, setParallelData] = useState<\n    LineSeriesPoint[][] | undefined\n  >(undefined);\n  const [domains, setDomains] = useState<Record<string, any> | undefined>(\n    undefined\n  );\n\n  useEffect(() => {\n    const newDomains = getDomains(targets);\n    if (props.targets !== undefined && newDomains !== undefined) {\n      setParallelData(\n        data.map(item => {\n          return targets.reduce((prev, curr) => {\n            const minMax = newDomains[curr];\n            const key = curr as keyof Pokemon;\n            return [\n              ...prev,\n              {\n                x: curr,\n                y:\n                  typeof minMax[0] === typeof 1\n                    ? ((item[key] as number) - minMax[0]) /\n                      (minMax[1] - minMax[0])\n                    : item[key] !== null\n                    ? minMax.indexOf(item[key]!.toString()) /\n                      (minMax.length - 1)\n                    : minMax.indexOf('')\n              }\n            ];\n          }, [] as LineSeriesPoint[]);\n        })\n      );\n      setDomains(newDomains);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.targets]);\n\n  return [parallelData, domains];\n};\n\nexport default useParallelData;\n","import { useState, useEffect } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst query = gql`\n  {\n    colors\n  }\n`;\n\nconst useColor = () => {\n  const { data } = useQuery(query);\n\n  return data.colors;\n};\n\nexport default useColor;\n","import React, { useRef, useState, useEffect } from 'react';\nimport {\n  XYPlot,\n  LineSeries,\n  DecorativeAxis,\n  LabelSeries,\n  LineSeriesPoint\n} from 'react-vis';\nimport useParallelData from '../uses/useParallelData';\nimport SelectorPanel from '../molecules/SelectorPanel';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport useColor from '../uses/useColor';\nimport useHighlight from '../uses/useHighlight';\nimport { useWindowSize } from 'react-use';\n\nexport type Props = {\n  targets: { position: number; name: string }[];\n};\n\nconst useStyles = makeStyles({\n  selectorPanel: {\n    height: 'calc(30vh - 1.2rem - 9.6px)'\n  },\n  parallel: {\n    height: 'calc(70vh - 2.8rem - 22.4px)'\n  }\n});\n\nconst Parallel: React.FC<Props> = (props: Props) => {\n  const classes = useStyles();\n  const [parallelData, domains] = useParallelData({\n    targets: props.targets\n  });\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 });\n\n  const colors = useColor();\n  const windowSize = useWindowSize();\n  const highlight = useHighlight();\n\n  useEffect(() => {\n    setContainerSize({\n      width: ref.current!.getBoundingClientRect().width,\n      height: ref.current!.getBoundingClientRect().height\n    });\n  }, [windowSize]);\n\n  return (\n    <Grid\n      item\n      container\n      xs={12}\n      sm={12}\n      md={12}\n      lg={12}\n      xl={12}\n      className={'component'}\n      alignContent={'space-around'}\n    >\n      <Grid\n        item\n        container\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        alignContent={'space-around'}\n        justify={'center'}\n        className={classes.selectorPanel}\n      >\n        {Array(6)\n          .fill(0)\n          .map((_i, index) => (\n            <Grid item container xs={6} sm={6} md={6} lg={6} xl={6}>\n              <SelectorPanel\n                domain={'parallel'}\n                target={`Axis ${index + 1}`}\n                value={props.targets[index]?.name}\n                position={index}\n              />\n            </Grid>\n          ))}\n        {colors[0] === '#12939a' ? (\n          <Grid item container xs={10} sm={10} md={10} lg={10} xl={10}>\n            <Typography variant={'body1'} color={'error'} align={'left'}>\n              Clustering is not enabled as one or more variables in the scatter\n              plot are discrete.\n            </Typography>\n          </Grid>\n        ) : null}\n      </Grid>\n      <Grid\n        item\n        container\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        ref={ref}\n        className={classes.parallel}\n        justify={'center'}\n      >\n        <XYPlot\n          width={containerSize.width * 0.9}\n          height={containerSize.height}\n          xType=\"ordinal\"\n          margin={{ top: 15, left: 0, bottom: 15, right: 0 }}\n        >\n          {parallelData !== undefined\n            ? parallelData!.map((item: LineSeriesPoint[], index: number) => {\n                return (\n                  <LineSeries\n                    data={item}\n                    color={highlight === index + 1 ? '#222222' : colors[index]}\n                    opacity={highlight === index + 1 ? 1 : 0.15}\n                  />\n                );\n              })\n            : null}\n          {parallelData !== undefined\n            ? parallelData![0].map(\n                (item: { x: React.ReactText }, index: any) => {\n                  const isNumeric = Number(domains![item.x][0]);\n                  return [\n                    [\n                      <DecorativeAxis\n                        axisStart={{ x: item.x, y: 0 }}\n                        axisEnd={{ x: item.x, y: 1 }}\n                        axisDomain={isNumeric ? domains![item.x] : [0, 1]}\n                        tickValue={\n                          isNumeric\n                            ? undefined\n                            : (v: any) =>\n                                domains![item.x][\n                                  Math.round(v * (domains![item.x].length - 1))\n                                ]\n                        }\n                        numberOfTicks={\n                          isNumeric ? undefined : domains![item.x].length - 1\n                        }\n                      />,\n                      <LabelSeries\n                        data={[\n                          {\n                            x: item.x,\n                            y: -0.04,\n                            label: item.x.toString(),\n                            style: { fontSize: 14 }\n                          }\n                        ]}\n                      />\n                    ]\n                  ];\n                }\n              )\n            : null}\n        </XYPlot>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Parallel;\n","import React from 'react';\nimport { AppBar, Grid, Typography } from '@material-ui/core';\nimport classes from '*.module.css';\n\ntype Props = {};\n\nconst Header: React.FC<Props> = (props: Props) => {\n  return (\n    <AppBar\n      position=\"sticky\"\n      style={{ backgroundColor: '#002855', height: '4rem' }}\n    >\n      <Grid container justify={'space-between'} alignItems={'center'}>\n        <Typography variant=\"h6\" style={{ margin: '1rem 3rem' }}>\n          ECS272-2020 Assignment 4\n        </Typography>\n        <Typography variant=\"h4\" style={{ margin: '0 3rem' }}>\n          Po-K-Means\n        </Typography>\n        <Typography variant=\"body1\" style={{ margin: '1rem 3rem' }}>\n          Keita Makino, Alice Dagmar Helena Lundvall\n        </Typography>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React from 'react';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport Scatter, { Props as ScatterProps } from '../organisms/Scatter';\nimport Details, { Props as DetailsProps } from '../organisms/Details';\nimport Parallel, { Props as ParallelProps } from '../organisms/Parallel';\nimport Header from '../organisms/Header';\n\ntype Props = {\n  scatter: ScatterProps;\n  details: DetailsProps;\n  parallel: ParallelProps;\n};\n\nconst useStyles = makeStyles({\n  main: {\n    minHeight: 'calc(100vh - 4rem)',\n    backgroundColor: '#FBF6E5'\n  },\n  scatter: {\n    height: 'calc(68vh - 2.72rem)'\n  },\n  details: {\n    height: 'calc(32vh - 1.28rem)'\n  },\n  parallel: {\n    height: 'calc(100vh - 4rem)'\n  },\n  visBox: {\n    boxShadow: 'inset 0 0 8px -3px #002855',\n    '& .component': {\n      padding: '16px'\n    }\n  }\n});\n\nconst Index: React.FC<Props> = (props: Props) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid item container xs={12} sm={12} md={12} lg={12} xl={12}>\n        <Header />\n      </Grid>\n      <Grid\n        item\n        container\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        className={classes.main}\n      >\n        {/* grid for scatter */}\n        <Grid container item xs={12} sm={12} md={12} lg={8} xl={8}>\n          <Grid\n            container\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            xl={12}\n            className={`${classes.scatter} ${classes.visBox}`}\n          >\n            <Scatter {...props.scatter} />\n          </Grid>\n          <Grid\n            container\n            item\n            xs={12}\n            sm={12}\n            md={12}\n            lg={12}\n            xl={12}\n            className={`${classes.details} ${classes.visBox}`}\n          >\n            <Details id={props.details.id} />\n          </Grid>\n        </Grid>\n\n        {/* grid for parallel & detail */}\n        <Grid\n          container\n          item\n          xs={12}\n          sm={12}\n          md={12}\n          lg={4}\n          xl={4}\n          className={`${classes.parallel} ${classes.visBox}`}\n        >\n          <Parallel {...props.parallel} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport IndexTemplate from '../components/templates/Index';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\ntype Props = {};\n\nconst query = gql`\n  {\n    scatter {\n      title\n      x\n      y\n      k\n    }\n    parallel {\n      title\n      targets {\n        position\n        name\n      }\n    }\n    details @client {\n      title\n      id\n    }\n  }\n`;\nconst Index: React.FC<Props> = (props: Props) => {\n  const { data } = useQuery(query);\n  return (\n    <IndexTemplate\n      scatter={data.scatter}\n      details={data.details}\n      parallel={data.parallel}\n    />\n  );\n};\n\nexport default Index;\n","import { gql } from 'apollo-boost';\n\nexport default {\n  Mutation: {\n    updateParallel: (\n      _root: any,\n      variables: { position: any; target: any },\n      { cache, getCacheKey }: any\n    ) => {\n      const id = getCacheKey({\n        __typename: 'parallel',\n        id: 1\n      });\n      const fragment = gql`\n        fragment targets on Parallel {\n          title\n          targets {\n            position\n            name\n          }\n        }\n      `;\n      const parallel = cache.readFragment({ fragment, id });\n      const data = {\n        title: parallel.title,\n        targets: [\n          ...parallel.targets.filter(\n            (item: { position: any }) => item.position !== variables.position\n          ),\n          {\n            position: variables.position,\n            name: variables.target,\n            __typename: 'target'\n          }\n        ].sort((a, b) => (a.position < b.position ? -1 : 1))\n      };\n\n      cache.writeData({ id, data });\n      return null;\n    }\n  }\n};\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Index from './pages/Index';\nimport { Grid } from '@material-ui/core';\n\nimport ApolloClient, { InMemoryCache, gql } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport data from './data/initialState';\nimport resolvers from './resolvers';\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  cache: cache,\n  typeDefs: '',\n  resolvers: resolvers\n});\n\ncache.writeData({\n  data\n});\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <Grid container xs={12} sm={12} md={12} lg={12} xl={12}>\n          <Index />\n        </Grid>\n      </ApolloProvider>\n    </div>\n  );\n};\n\nexport default App;\n","export default {\n  scatter: {\n    title: 'scatter',\n    x: 'Attack',\n    y: 'Defense',\n    k: 2,\n    __typename: 'scatter'\n  },\n  parallel: {\n    id: 1,\n    title: 'parallel',\n    targets: [\n      { position: 0, name: 'Attack', __typename: 'target' },\n      { position: 1, name: 'Defense', __typename: 'target' }\n    ],\n    __typename: 'parallel'\n  },\n  details: {\n    title: 'details',\n    id: null,\n    __typename: 'details'\n  },\n  colors: []\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}